.filter-tabs{
  max-width: $max-width;
  margin: 0 auto;
  label{
    margin: 2px;
    width: calc(25% - 4px);
    background-color: rgba($grey-4, .7);
    border: none;
    &:hover {
      color: $white;
      background-color: rgba($green, .7);
      transition: all 250ms ease-in-out;
    }
    &:last-child{
      width: 100%;
    }
    &:focus{
      background-color: rgba($green, .7);
      color: $white;
    }
  }
  .filters{
    background-color: transparent;
    border: none;
  }
}

.filter-radio {
  left: -50px;
  position: absolute;
}

.filters label {
  cursor: pointer;
}

/* add .grid selector because that is now the sibling element of the filter. call .grid and its child .filters */

#filter-all:checked ~ .grid .filters [for="filter-all"],
#filter-branding:checked ~ .grid .filters [for="filter-branding"],
#filter-ux:checked ~ .grid .filters [for="filter-ux"],
#filter-web:checked ~ .grid .filters [for="filter-web"],
#filter-illustration:checked ~ .grid .filters [for="filter-illustration"],
#filter-motion:checked ~ .grid .filters [for="filter-motion"],
#filter-print:checked ~ .grid .filters [for="filter-print"],
#filter-type:checked ~ .grid .filters [for="filter-type"],
#filter-photo:checked ~ .grid .filters [for="filter-photo"] {
  background-color: $green;
  box-shadow: none;
  color: white;
}

// #filter-all:checked ~ .filters [for="filter-all"],
// #filter-branding:checked ~ .filters [for="filter-branding"],
// #filter-group-2:checked ~ .filters [for="filter-group-2"],
// #filter-group-3:checked ~ .filters [for="filter-group-3"] {
//   background-color: red;
// }

/* The ~ sibling selector will select all .filters elements, as long as they follow the preceding value*/

.filter-items {
  li{
    transition: opacity $filter-transition ease-in-out;
    &:hover, a:focus{
      p{
        transition: background-color $filter-transition * 0.5 ease-in-out;
        background-color: rgba($green, 0.75);
        z-index: 3000;
      }
    }
  }
}

.filter-items > li {
  opacity: .4;
  &:hover img, a:focus img{
    top: 0;
  }
  &> a:focus{
    z-index: 2000;
    outline: 5px solid $yellow;
  }
}

#filter-all:checked ~ .filter-items > li {
  opacity: 1;
  &:hover img, a:focus img{
    top: calc(-100% - 1px);
  }

}

/* > will only select direct child descendant */

#filter-branding:checked ~ .filter-items > [data-category~="branding"],
#filter-ux:checked ~ .filter-items > [data-category~="ux-ui"],
#filter-web:checked ~ .filter-items > [data-category~="web"],
#filter-illustration:checked ~ .filter-items > [data-category~="illustration"],
#filter-motion:checked ~ .filter-items > [data-category~="motion"],
#filter-print:checked ~ .filter-items > [data-category~="print"],
#filter-type:checked ~ .filter-items > [data-category~="type"],
#filter-photo:checked ~ .filter-items > [data-category~="photography"] {
  opacity: 1;
  &:hover img, a:focus img{
    top: calc(-100% - 1px);
  }
}

ul li {
  list-style-type: none;
}

.filter-btn{
  text-align: center;
  background-color: transparent;
  border: 1px solid $grey-4;
  color: $white;
  padding: .5em 1em;
}

.filters{
  margin: 0 auto;
  border: 1px solid $grey-4;
  background-color: rgba($grey-4, .5);
}

.filter-btn:hover {
  background-color: rgba($green, .5);
  color: $white;
}

#filter-select {
  width: 100%;
  color: $grey;
  font-size: 16px;
  background-color: transparent;
  padding: .5em 1em;
  border: 1px solid $grey-4;
}

